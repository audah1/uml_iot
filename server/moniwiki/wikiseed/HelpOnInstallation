[[TableOfContents]]
== 설치 전 필요환경 ==
/!\ 윈도우 고급사용자가 아닌 일반 사용자라면 Apache와 rcs/diff 등등이 미리 배포에 포함되어 있는 MicroApache를 사용하시기 바랍니다.

아파치 웹서버 / PHP 등등을 직접 설치하고 자유자재로 세팅할 수 있는 고급사용자 혹은 APM(apache + php + mysql) 배포등을 이미 설치했고 자신이 직접 세팅 가능한 고급사용자의 경우는 아래의 필요환경을 참고하시기 바랍니다.

아래 설명은 대개 유닉스를 기준으로 설명하기때문에 윈도우 고급사용자의 경우 이점을 유의하셔야 하며, 윈도우 고급사용자가 아니라면 설치하기 편리한 MicroApache 사용을 권장해 드립니다.

 * 아파치 웹서버, PHP 4.2.3 이상
 * rcs / diff
`rcs`가 설치되었는지 확인한다. {{{/usr/bin/rlog /usr/bin/ci /usr/bin/co}}}등등의 실행파일이 있어야 한다. {{{/usr/bin/merge}}}도 필요하다. PHP gettext 모듈이 필요하다. See also MoniWikiRcs 
 * <!> `rcs`가 없어도 사용할 수 있으나 백업본이 저장되지 않습니다.
  * 모니위키 1.1.0 이상부터 PHP로 만들어진 RcsLite를 제공하며, rcs를 사용할 수 없는 환경에서 rcs 대용으로 사용할 수 있습니다.
 * 윈도우즈 사용자의 경우 MicroApache 웹서버가 포함된 배포를 받으실 수 있습니다.
== 다운로드 받는다 ==
http://dev.naver.com/projects/moniwiki/
 * 구 버전의 모니위키의 경우에 http://kldp.net/projects/moniwiki/download 사이트를 통해 받으실 수 있습니다.

개발에 관심이 있으신 분이라면 최신 스냅샷을 SnapShot 페이지를 통해 받으실 수 있습니다.
== 압축을 적절한 곳에 푼다 ==
{{{
$ tar --same-permissions -xzvf moniwiki-1.x.y.tgz
}}}
여기서 `moniwiki-1.x.y.tgz` 파일은 `moniwiki-1.2.0.tgz`와 같은 형식의 이름을 가지는 tar.gz 배포 압축 파일이다.

이 압축파일은 윈도우상에서는 알집/빵집/반디집/7zip 기타 등등의 압축해제용 프로그램을 통해서 압축을 풀 수 있다.

압축을 풀면 moniwiki라는 디렉토리 밑에 화일들이 있는 것을 볼 수 있다.

attachment:moni-dir.png

디렉토리 이름을 원하는 것으로 바꿀 수도 있다. 예를 들어 {{{/wiki}}}라고 바꿀 수 있으며
기본 값은 {{{/moniwiki}}}이다.

모니위키를 호스팅 사이트에 설치해서 위키위키를 외부에 노출하여 서비스를 하고자 하는 경우 {{{/moniwiki}}}값이 자신의 웹사이트 주소줄에 노출되게 된다.
예를 들어, 호스팅하고 있는 사이트의 html 최상위 디렉토리에 압축을 풀면 `moniwiki`라는 디렉토리 이름으로 압축이 풀리는데,
자신의 사이트가 {{{http://foobar.com/}}} 이라면 {{{http://foobar.com/moniwiki}}}로 접속해야 한다.

`/moniwiki` 이름이 마음에 들지 않아서 다른 이름으로 바꾸고자 하는 경우 `moniwiki` 디렉토리를 `wiki`로 바꿔주면 사이트의 위키 주소는 {{{http://foobar.com/wiki}}}이 된다. 유닉스/리눅스의 경우에는 {{{mv}}} 명령을 이용하여 {{{mv moniwiki wiki}}}라는 명령을 통해서 디렉토리 이름을 바꿀 수 있다.

== 디렉토리 권한을 조정한다 ==
최초 모니위키 설정이 전혀 없는 상태에서 모니위키가 설치된 사이트를 접근하면 {{{http://foobar.com/moniwiki/monisetup.php}}}이 열리고 모니위키 설치 환경을 점검하게 된다. 
이때 모니위키 초기 설정값을 조정하고 저장하게 되는데, 이 과정이 제대로 진행되기 위해서는 일부 디렉토리의 권한을 조정해야 한다. 기본적으로 다음과 같은 쉘 명령을 통해서 권한 조정이 필요한 디렉토리의 권한을 변경할 수 있다.

{{{
cd moniwiki # 모니위키 압축이 풀린 최상위 디렉토리
chmod 777 data
chmod 777 .
}}}
즉 모니위키가 설치된 디렉토리 및 그 하위 디렉토리 `data`의 퍼미션을 `777` 혹은 `2777`로 변경한다.

/!\ 경우에 따라서 보안상의 이유로 디렉토리의 퍼미션을 `777` 대신에 `707`을 사용하거나, `770`을 쓰는 경우도 있는데, 이것은 전적으로 자신의 설치 환경및 사용자가 가질 수 있는 시스템 사용자 권한에 따라 다를 수 있다.


즉, `data` 디렉토리 및 최상위 '''디렉토리'''의 퍼미션을 모든 사람이 읽기/쓰기/접근이 가능하게 만들어 주는 것이다.
(디렉토리의 퍼미션을 `777` 대신에 `2777`로 하여 /SetGid 권한을 주면 일반 유저 권한만으로도 모니위키를 관리하기가 좀 더 쉽게 된다.)

{{{
chmod 2777 data
chmod 2777 .
}}}

이러한 작업을 다음과 같이 `monisetup.sh` 쉘 스크립트를 사용하여 한방에 처리할 수도 있다.
=== `monisetup.sh`를 사용하는 경우 ===
호스팅 서버로 접속이 가능한 경우 (ssh 등등) `monisetup.sh` 쉘 스크립트를 사용하면 약간 더 쉽게 디렉토리 권한을 조정할 수 있다.

/!\ `monisetup.sh` 스크립트는 디렉토리 권한 조정 및 약간의 부가작업을 수행해줍니다.

`monisetup.sh`를 실행하여 디렉토리의 쓰기권한을 조정하는 경우 디렉토리 퍼미션을 `777`로 할 지 `2777`로 할 지 선택하는 것이 가능하다. (기본값은 `2777`)

실행명령어는 명령 프롬포트상에서
{{{
sh monisetup.sh
}}}

/!\ 윈도우 환경에서는 곧바로 `monisetup.php`를 주소줄에서 열어볼 수 있습니다. (1.1.3 이전 버전의 모니위키에서는 `monisetup.bat`를 실행해야 합니다).

=== `monisetup.sh` 쉘 실행 환경이 안되는 경우 ===
`monisetup.sh` 쉘 스크립트를 실행할 수 있는 환경이 아닌 경우에는 다음과 같이 한다.

'''[[WinSCP]] 사용이 가능한 경우''' [[WinSCP]] 페이지를 참조한다.
 * WinSCP에서 임의의 디렉토리의 퍼미션을 조정하는 것이 가능합니다.
== MoniSetup ==
이제 주소줄에 {{{http://foobar.com/moniwiki}}} 주소를 열면 [[config.php]]가 설정되지 않은 상태에서는 자동으로 `monisetup.php`가 실행되게 되며 자동으로 [[config.php]] 초기 설정 파일을 생성하게 된다.

MoniSetup은 [[config.php]]파일이 없는 경우에 자동으로 실행되며, 수동으로 실행하고 싶은 경우에는 {{{http://foobar.com/moniwiki/monisetup.php}}}로 접속하면 된다. 여기서 {{{http://foobar.com}}}은 자신이 구축할 사이트의 도메인 혹은 {{{http://localhost/}}}이다. 윈도우상에서 MicroApache를 사용하는 경우에는 {{{http://localhost:8800}}} 등등이 될 수도 있다.

자신의 사이트가 {{{http://foobar.com/moniwiki}}}인 경우에 아무런 설정이 되어있지 않은 상태에서 최초 접속을 하게 되면 다음과 같은 화면이 뜬다.

attachment:setup1.png (모니위키 1.2.0)의 경우

attachment:setup2.png (퍼미션이 맞지 않는 경우. 이 경우 디렉토리 퍼미션을 조정하는 윗단락 문서를 참고한다.)

attachment:setup3.png (퍼미션이 맞는 경우에 [[config.php]] 초기 설정파일이 자동으로 생성된다.

/!\ 초기 설정파일이 실수로 꼬여서 제대로 되지 않는다면, 혹은 처음부터 다시 설정하고 싶다면 [[config.php]]파일을 지워주고 다시 접속한다.

초시 설정 파일이 정상적으로 만들어졌다면 다음과 같은 화면을 볼 수 있으며,
attachment:setup4.png

현재 설정 읽기에서 확인해보면 로고 그림([[$logo_string]]) 값이 아래 그림처럼 나오게 된다.

http://moniwiki.kldp.org/imgs/moniwiki-logo.png

 1. 처음 실행하면 {{{monisetup.php}}}가 자동으로 뜨며 자신의 환경에 맞는 [[config.php]] 초기 설정파일이 만들어진다.
 1. 다시 `monisetup.php`를 열면 필요한 몇몇 디렉토리가 만들어진다. {{{data}}} 아래의 임시 디렉토리 및 {{{_cache}}} 디렉토리 등등이 자동 생성된다.
 1. MoniWiki를 처음 설치할 경우는 WikiSeed를 심을것인지를 선택한다.
 WikiSeed(위키 씨앗)을 심는 경우는 불필요한 페이지가 들어갈 수 있는데, 어느 정도 익숙해졌다고 생각되면 지워도 되며, 아예 처음부터 설치하지 않아도 된다.[[BR]]
 그러나 초보 사용자라면 SystemPages는 반드시 설치하여 위키 사용법 외에 도움말 문서를 설치할 것을 권장한다.

/!\ 처음 설치할 때 관리 비밀번호 {{{$admin_passwd}}}를 반드시 설정해 주세요 /!\
== [[secure.sh]]를 실행한다 ==
`[[secure.sh]]`를 실행해서 다른 사람들이 자신의 Wiki 설정을 볼 수 없게, 고칠 수 없게 한다.

쉘 실행환경이 안되는 경우는 `[[secure.sh]]` 문서를 참조하여 수동으로 고친다.

[[config.php]] 초기 설정이 만들어지면 기본적으로 설치가 완료된 것이다.

/!\ 윈도우즈 환경에서는 {{{secure.sh}}}를 실행하실 필요가 없습니다.
== 설정하기 ==
모니위키 설치가 끝났지만 사용자의 입맛에 맞게 설정을 변경하고자 한다면 다음을 참고한다.
 * MoniWikiOptions 모니위키의 다양한 옵션을 조정한다.
 * 그밖의 질문은 http://dev.naver.com/projects/moniwiki/forum 혹은 [[질문과답변]] 게시판을 통해서 질문한다.
  * http://kldp.net/projects/moniwiki/forum 사이트도 참조하세요. (구 모니위키 프로젝트 홈페이지의 게시판)
== [수동설치] ==
수동으로 설치하실 분들은 [[수동설치]] 페이지를 참조하세요.
== 기타 주의사항 ==
 1. MoniSetup을 실행시킬 때, {{{$admin_passwd}}}를 설정하면 이 비밀번호를 아는 자신만이 DeletePage 등등의 일부 비밀번호로 보호된 작업를 수행할 수 있다. 이 값을 설정하면, 차후에 MoniSetup을 할 때 이 값을 알아야 [[config.php]]를 고칠 수 있으며, config.php에 `[[$admin_passwd]]` 값이 들어가므로 쉘로 접속이 가능한 경우에는 수동으로 고칠 수 있다. See also AdminPassword
 2. `[[$rcs_user]]`의 기본 값은 "`root`"이나, 위키를 처음 설치할 경우는 이 값을 조절할 수 있다. 한번 결정한 후에는 이 값을 계속해서 써야한다.
  * 윈도우즈에서 설치할 때에 이 값이 바뀔 수 있다. 업그레이드를 하여 데이타를 옮겼을 경우에 이 값을 계속 유지하도록 해주어야 한다.
  * /!\ {{{$rcs_user}}} 값이 변경되면 버전관리를 쓸 수 없으므로 유의해야 한다. (물론 파워 유저라면 약간 복잡한 단계를 거치면 `[[$rcs_user]]`를 변경하는 것도 가능하다.)
== 관리 ==
업그레이드를 편리하게 하려면, 플러그인을 새로 추가할 경우는 원 파일을 고치는 것보다는 새롭게 플러그인을 만들어 준다. 이렇게 하면 tar파일을 덮어쓰는 것만으로 간단히 업그레이드 할 수 있다.
== 업그레이드 ==
모니위키 1.1.3 이후 최신 버전부터는 UpgradeScript를 제공하여 보다 편리하게 업그레이드/다운그레이드를 할 수 있다. 
특별한 경우가 아니라면, 덮어쓰는 것만으로 업그레이드 할 수 있다. 원 파일을 수정하였을 경우라면 덮어쓰는 것을 선택적으로 해주어야 할 것이다. 
 * 기존의 `data`디렉토리는 전혀 덮어씌여지지 않는다. 그러나 만약의 실수를 대비하기 위해서 업그레이드 하기 전에는 `data/text` 디렉토리의 내용을 백업해 두는 것이 좋을 것이다.
== 백업 ==
`root`사용자라면 tar를 이용해서 간단히 백업할 수 있겠고, 호스팅을 하는 일반 사용자의 경우라면 `backup` `restore` 액션을 이용할 수 있다.

 * `backup` : {{{?action=backup}}}해 보라. 백업은 `data` 디렉토리의 `user`와 `text`를 및 기타 몇몇 설정을 보존한다. `pds/` 디렉토리를 보존하지는 않는다. 백업된 파일은 `pds/` (혹은 `$upload_dir`로 정의된 위치) 하위에 저장된다.
 * `restore` : {{{?action=restore}}}한다. 백업된 `tar` 파일 목록이 나오고 `tar` 파일을 선택하면 관리 비번을 물어본다.
 * 윈도우즈 사용자라면 퍼미션이 문제가 되지 않으므로 간단히 {{{data}}}디렉토리를 통채로 복사해서 보존하면 될것이다.
== 윈도우즈 ==
 * 모니위키 1.1.3.1부터는 MicroApache와 함께 배포되고 있다. MicroApache는 아파치를 작게 줄인 윈도우즈용 배포판이며, 모니위키를 보다 손쉽게 맛볼 수 있게 해준다.
 * 특히 모니위키 1.2.0부터는 MicroApache 배포가 개선되어서 USB에도 설치하여 사용할 수 있다.

== 그밖의 참고 사이트 ==
아래의 내용은 약간 낡은 내용이므로 참고만 하시기 바랍니다.
 * 윈도우판 설치법 : http://parkpd.egloos.com/3285386 -- [rigmania] [[DateTime(2010-05-19T14:03:49)]]
  * VimProcessor 페이지에 윈도우즈에 관련된 설명을 추가했습니다.
  * 위의 링크 설명으로 가보니 모니위키 1.1.2의 문제점은 이미 해결되었고, vim관련 옵션은 VimProcessor를 살펴보세요.

----
[[Navigation(HelpOnAdministration)]]
